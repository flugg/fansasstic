
// -- Grids -------------------------------------------

// ----------------------------------------------------
//
// ----------------------------------------------------

@mixin row() {

    @extend %clearfix;

    margin: 0 0 0 -20px;
    padding: 0;

    list-style: none;
}

// ----------------------------------------------------
//
// ----------------------------------------------------

@mixin span( $_default, $_breakpoints: null ) {

    float: left;
    width: ( nth( $_default, 1 ) / nth( $_default, 3 ) * 100 ) * 1%;

    @if $_breakpoints {

        @for $_breakpoint from 1 through length( $_breakpoints ) {

            $_currentPoint: nth( nth( $_breakpoints, $_breakpoint ), 1 );
            $_ratio:        nth( nth( $_breakpoints, $_breakpoint ), 2 );

            @if $_breakpoint < length( $_breakpoints ) {
                @include between( $_currentPoint, nth( nth( $_breakpoints, $_breakpoint + 1 ), 1 ) ) {
                    width: ( nth( $_ratio, 1 ) / nth( $_ratio, 3 ) * 100 ) * 1%;
                }

            } @else {
                @include at( $_currentPoint ) {
                    width: ( nth( $_ratio, 1 ) / nth( $_ratio, 3 ) * 100 ) * 1%;
                }
            }
        }
    }
}


// Row
// ---
//@include Component( 'Row' ) {
//  @include module( 'clear-fix' );

//    @for $i from 0 through 6 {

        // Grid--i
//      @include Modifier( '#{$i}' ) {

            // Grid--i Grid-column
//@include Element( 'column' ) {
                //              width: ( 100% / $i );
//          }
//      }
//  }

    // Grid-column
//  @include Element( 'column' ) {
//      float: left;
//  }
//}